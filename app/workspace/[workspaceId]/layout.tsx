import { auth } from '@/lib/auth/utils';
import prisma from '@/lib/db';
import { SocketRoomEmitterProvider } from '@/providers/SocketRoomProvider';
import { SocketWorkspaceEmitterProvider } from '@/providers/SocketWorkspaceProvider';
import type { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'Home',
  description: 'Generated by create next app',
};

export default async function RootLayout(
  props: Readonly<{
    children: React.ReactNode;
    params: Promise<{ workspaceId: string }>;
  }>
) {
  const [params, session] = await Promise.all([
    await props.params,
    await auth(),
  ]);

  const { children } = props;

  const userId = session?.user?.id;

  if (!userId) return <main>You must be logged in to view this page</main>;

  const workspaceUsers = await prisma.workspaceMember.findFirst({
    where: {
      workspaceId: params.workspaceId,
      userId: userId,
    },
    select: {
      id: true,
    },
  });

  if (!workspaceUsers)
    return <main>You are not a member of this workspace</main>;

  return (
    <SocketWorkspaceEmitterProvider room={params.workspaceId}>
      <SocketRoomEmitterProvider room={`${userId}-${params.workspaceId}`}>
        {children}
      </SocketRoomEmitterProvider>
    </SocketWorkspaceEmitterProvider>
  );
}
